#!/bin/bash

# Inspired by http://linuxcommand.org/

TITLE="System information for $HOSTNAME"
RIGHT_NOW=$(date +"%x %r %Z")
TIME_STAMP="Updated on $RIGHT_NOW"

system_info() {
    echo "<h2>OS</h2>"
    echo "<pre>"
    lsb_release -a
    echo "</pre>"
} 

show_uptime() {
    echo "<h2>Uptime</h2>"
    echo "<pre>"
    uptime
    echo "</pre>"
}

drive_space() {
    echo "<h2>Disk usage</h2>"
    echo "<pre>"
    df -h
    echo "</pre>"
}

home_space() {
    echo "<h2>Usage by vhosts</h2>"
    echo "<pre>"
    format="%8s%10s%10s   %-s\n"
    printf "$format" "Dirs" "Files" "Blocks" "Directory"
    printf "$format" "----" "-----" "------" "---------"
    dir_list="/var/www/*"
    for home_dir in $dir_list; do
        total_dirs=$(find $home_dir -type d | wc -l)
        total_files=$(find $home_dir -type f | wc -l)
        total_blocks=$(du -s $home_dir)
        printf "$format" $total_dirs $total_files $total_blocks
    done
    echo "</pre>"

}   # end of home_space

render_htop() {
    echo "<h2>htop</h2>"
    echo q | htop | aha --line-fix
} 


write_page() {
    cat <<- _EOF_
    <html>
        <head>
        <title>$TITLE</title>
	<style>
		body,html{font-family:verdana,sans-serif;}
		h1{font-family:verdana,sans-serif;font-size:30px;}
		h2{font-family:verdana,sans-serif;font-size:20px;}
	</style>
        </head>
        <body>
        <h1>$TITLE</h1>
        <p>$TIME_STAMP</p>
        $(system_info)
        $(show_uptime)
        $(drive_space)
        $(home_space)
        $(render_htop)
        </body>
    </html>
_EOF_
}

usage() {
    echo "usage: sysinfo [[[-f file ] [-i]] | [-h]]"
}




interactive=
filename=~/sysinfo.html

while [ "$1" != "" ]; do
    case $1 in
        -f | --file )           shift
                                filename=$1
                                ;;
        -i | --interactive )    interactive=1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done


write_page > $filename